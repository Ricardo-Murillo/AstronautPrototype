<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_link</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// set default values for obj_weight's variables 
// author: Ricardo Murillo

parent = noone;
mobile_state = false;
old_x = x;
old_y = y;

vel_x = 0;
vel_y = 0;
old_vel_x = 0;
old_vel_y = 0;

acc_x = 0;
acc_y = 0;

mass = 19;
dt = 0.15;
grav = 64;
grav_acc = 8;

collisionblock = obj_block;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///recalculate velocity since chain might have moved it
// author: Ricardo Murillo

vel_x = (x- old_x)/dt;
vel_y = (y - old_y)/dt;

acc_x = (vel_x - old_vel_x)/dt;
acc_y = (vel_y - old_vel_y)/dt;

old_x = x;
old_y = y;
old_vel_x = vel_x;
old_vel_y = vel_y;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move obj_weight based on local velocities and collisions 
// author: Ricardo Murillo

move_x = mouse_x - x;
move_y = mouse_y - y;

if(mouse_check_button_pressed(mb_left)){
    if (instance_position( mouse_x, mouse_y, self )){
        mobile_state = true;
    }
}
if(mouse_check_button_released(mb_left))
    mobile_state = false;

if (vel_y &lt; grav)
    vel_y += grav_acc *dt;    
if (place_meeting(x,y+1,collisionblock)){
    vel_x *= 0.9;
}
if (mobile_state){
   vel_x = move_x/dt;
   vel_y = move_y/dt;
}

//H collision
if (place_meeting(x+vel_x*dt,y,collisionblock)){
    while(!place_meeting(x+sign(vel_x),y,collisionblock)){
        //parent.last_x += sign(vel_x);
        x += sign(vel_x);
    }
    vel_x = 0;
}
//parent.last_x += vel_x;
x += vel_x * dt;
//V collision
//place_meeting is too tied to self for a global function
if (place_meeting(x,y+vel_y*dt,collisionblock)){ 
    while(!place_meeting(x,y+sign(vel_y),collisionblock)){
        //parent.last_y += sign(vel_y);
        y += sign(vel_y);
    }
    vel_y = 0;
}    
//parent.last_y += vel_y;
y += vel_y * dt;

///move to rope position
//x = parent.last_x;
//y = parent.last_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
//if drawguides {}
draw_forces(self);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
